<statements>
<statement><source>/home/shubham/Downloads/assignment-5-ramandeep-shivangi/src/main/scala/FileOperations.scala</source><package>&lt;empty&gt;</package><class>FileOperations</class><classType>Class</classType><fullClassName>FileOperations</fullClassName><method>getFiles</method><path>/home/shubham/Downloads/assignment-5-ramandeep-shivangi/src/main/scala/FileOperations.scala</path><id>8</id><start>525</start><end>573</end><line>21</line><description>scala.Predef.refArrayOps[java.io.File](scala.Predef.refArrayOps[java.io.File](directory.listFiles()).filter(((x$3: java.io.File) =&gt; x$3.isDirectory()))).toList</description><symbolName>scala.collection.TraversableOnce.toList</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/shubham/Downloads/assignment-5-ramandeep-shivangi/src/main/scala/FileOperations.scala</source><package>&lt;empty&gt;</package><class>FileOperations</class><classType>Class</classType><fullClassName>FileOperations</fullClassName><method>getFiles</method><path>/home/shubham/Downloads/assignment-5-ramandeep-shivangi/src/main/scala/FileOperations.scala</path><id>11</id><start>683</start><end>691</end><line>25</line><description>fileList</description><symbolName>FileOperations.fileList</symbolName><treeName>Ident</treeName><branch>true</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/shubham/Downloads/assignment-5-ramandeep-shivangi/src/main/scala/FileOperations.scala</source><package>&lt;empty&gt;</package><class>FileOperations</class><classType>Class</classType><fullClassName>FileOperations</fullClassName><method>getFiles</method><path>/home/shubham/Downloads/assignment-5-ramandeep-shivangi/src/main/scala/FileOperations.scala</path><id>2</id><start>393</start><end>414</end><line>17</line><description>directory.isDirectory()</description><symbolName>java.io.File.isDirectory</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/shubham/Downloads/assignment-5-ramandeep-shivangi/src/main/scala/FileOperations.scala</source><package>&lt;empty&gt;</package><class>FileOperations</class><classType>Class</classType><fullClassName>FileOperations</fullClassName><method>getFiles</method><path>/home/shubham/Downloads/assignment-5-ramandeep-shivangi/src/main/scala/FileOperations.scala</path><id>5</id><start>525</start><end>544</end><line>21</line><description>directory.listFiles()</description><symbolName>java.io.File.listFiles</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/shubham/Downloads/assignment-5-ramandeep-shivangi/src/main/scala/FileOperations.scala</source><package>&lt;empty&gt;</package><class>FileOperations</class><classType>Class</classType><fullClassName>FileOperations</fullClassName><method>getFiles</method><path>/home/shubham/Downloads/assignment-5-ramandeep-shivangi/src/main/scala/FileOperations.scala</path><id>14</id><start>710</start><end>753</end><line>28</line><description>scala.concurrent.Future.apply[List[java.io.File]](getFiles(path, scala.collection.immutable.Nil))(scala.concurrent.ExecutionContext.Implicits.global)</description><symbolName>scala.concurrent.Future.apply</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/shubham/Downloads/assignment-5-ramandeep-shivangi/src/main/scala/FileOperations.scala</source><package>&lt;empty&gt;</package><class>FileOperations</class><classType>Class</classType><fullClassName>FileOperations</fullClassName><method>getFiles</method><path>/home/shubham/Downloads/assignment-5-ramandeep-shivangi/src/main/scala/FileOperations.scala</path><id>4</id><start>454</start><end>501</end><line>19</line><description>scala.Predef.refArrayOps[java.io.File](scala.Predef.refArrayOps[java.io.File](directory.listFiles()).filter(((x$1: java.io.File) =&gt; x$1.isFile()))).toList.:::[java.io.File](x$2)</description><symbolName>scala.collection.immutable.List.:::</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/shubham/Downloads/assignment-5-ramandeep-shivangi/src/main/scala/FileOperations.scala</source><package>&lt;empty&gt;</package><class>FileOperations</class><classType>Class</classType><fullClassName>FileOperations</fullClassName><method>getFiles</method><path>/home/shubham/Downloads/assignment-5-ramandeep-shivangi/src/main/scala/FileOperations.scala</path><id>13</id><start>725</start><end>747</end><line>29</line><description>getFiles(path, scala.collection.immutable.Nil)</description><symbolName>FileOperations.getFiles</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/shubham/Downloads/assignment-5-ramandeep-shivangi/src/main/scala/FileOperations.scala</source><package>&lt;empty&gt;</package><class>FileOperations</class><classType>Class</classType><fullClassName>FileOperations</fullClassName><method>getFiles</method><path>/home/shubham/Downloads/assignment-5-ramandeep-shivangi/src/main/scala/FileOperations.scala</path><id>7</id><start>525</start><end>566</end><line>21</line><description>scala.Predef.refArrayOps[java.io.File](directory.listFiles()).filter(((x$3: java.io.File) =&gt; x$3.isDirectory()))</description><symbolName>scala.collection.TraversableLike.filter</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/shubham/Downloads/assignment-5-ramandeep-shivangi/src/main/scala/FileOperations.scala</source><package>&lt;empty&gt;</package><class>FileOperations</class><classType>Class</classType><fullClassName>FileOperations</fullClassName><method>getFiles</method><path>/home/shubham/Downloads/assignment-5-ramandeep-shivangi/src/main/scala/FileOperations.scala</path><id>1</id><start>345</start><end>359</end><line>15</line><description>new java.io.File(path)</description><symbolName>java.io.File.&lt;init&gt;</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/shubham/Downloads/assignment-5-ramandeep-shivangi/src/main/scala/FileOperations.scala</source><package>&lt;empty&gt;</package><class>FileOperations</class><classType>Class</classType><fullClassName>FileOperations</fullClassName><method>getFiles</method><path>/home/shubham/Downloads/assignment-5-ramandeep-shivangi/src/main/scala/FileOperations.scala</path><id>10</id><start>416</start><end>661</end><line>17</line><description>{
  val listOfFiles: List[java.io.File] = {
    &lt;synthetic&gt; &lt;artifact&gt; val x$2: List[java.io.File] = fileList;
    scala.Predef.refArrayOps[java.io.File](scala.Predef.refArrayOps[java.io.File](directory.listFiles()).filter(((x$1: java.io.File) =&gt; x$1.isFile()))).toList.:::[java.io.File](x$2)
  };
  val dirList: List[java.io.File] = scala.Predef.refArrayOps[java.io.File](scala.Predef.refArrayOps[java.io.File](directory.listFiles()).filter(((x$3: java.io.File) =&gt; x$3.isDirectory()))).toList;
  {
    &lt;synthetic&gt; &lt;artifact&gt; val x$4: List[java.io.File] = listOfFiles;
    dirList.flatMap[java.io.File, List[java.io.File]](((x: java.io.File) =&gt; getFiles(x.getPath(), scala.collection.immutable.Nil)))(immutable.this.List.canBuildFrom[java.io.File]).:::[java.io.File](x$4)
  }
}</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Block</treeName><branch>true</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/shubham/Downloads/assignment-5-ramandeep-shivangi/src/main/scala/FileOperations.scala</source><package>&lt;empty&gt;</package><class>FileOperations</class><classType>Class</classType><fullClassName>FileOperations</fullClassName><method>getFiles</method><path>/home/shubham/Downloads/assignment-5-ramandeep-shivangi/src/main/scala/FileOperations.scala</path><id>9</id><start>594</start><end>653</end><line>22</line><description>dirList.flatMap[java.io.File, List[java.io.File]](((x: java.io.File) =&gt; getFiles(x.getPath(), scala.collection.immutable.Nil)))(immutable.this.List.canBuildFrom[java.io.File]).:::[java.io.File](x$4)</description><symbolName>scala.collection.immutable.List.:::</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/shubham/Downloads/assignment-5-ramandeep-shivangi/src/main/scala/FileOperations.scala</source><package>&lt;empty&gt;</package><class>FileOperations</class><classType>Class</classType><fullClassName>FileOperations</fullClassName><method>getFiles</method><path>/home/shubham/Downloads/assignment-5-ramandeep-shivangi/src/main/scala/FileOperations.scala</path><id>3</id><start>371</start><end>414</end><line>17</line><description>directory.exists().&amp;&amp;(directory.isDirectory())</description><symbolName>scala.Boolean.&amp;&amp;</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/shubham/Downloads/assignment-5-ramandeep-shivangi/src/main/scala/FileOperations.scala</source><package>&lt;empty&gt;</package><class>FileOperations</class><classType>Class</classType><fullClassName>FileOperations</fullClassName><method>getFiles</method><path>/home/shubham/Downloads/assignment-5-ramandeep-shivangi/src/main/scala/FileOperations.scala</path><id>12</id><start>740</start><end>746</end><line>29</line><description>scala.collection.immutable.Nil</description><symbolName>scala.collection.immutable.Nil</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/shubham/Downloads/assignment-5-ramandeep-shivangi/src/main/scala/FileOperations.scala</source><package>&lt;empty&gt;</package><class>FileOperations</class><classType>Class</classType><fullClassName>FileOperations</fullClassName><method>getFiles</method><path>/home/shubham/Downloads/assignment-5-ramandeep-shivangi/src/main/scala/FileOperations.scala</path><id>6</id><start>552</start><end>565</end><line>21</line><description>x$3.isDirectory()</description><symbolName>java.io.File.isDirectory</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
</statements>